# coding: utf-8

"""
    API documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.categories_return_complete_get200_response_inner import CategoriesReturnCompleteGet200ResponseInner

class TestCategoriesReturnCompleteGet200ResponseInner(unittest.TestCase):
    """CategoriesReturnCompleteGet200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CategoriesReturnCompleteGet200ResponseInner:
        """Test CategoriesReturnCompleteGet200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CategoriesReturnCompleteGet200ResponseInner`
        """
        model = CategoriesReturnCompleteGet200ResponseInner()
        if include_optional:
            return CategoriesReturnCompleteGet200ResponseInner(
                name = '',
                url = '',
                children = [
                    openapi_client.models._categories_get_200_response_inner._categories_get_200_response_inner(
                        id = 0, 
                        name = '', 
                        url = '', 
                        count = 0, 
                        slug = '', 
                        things_url = '', )
                    ]
            )
        else:
            return CategoriesReturnCompleteGet200ResponseInner(
        )
        """

    def testCategoriesReturnCompleteGet200ResponseInner(self):
        """Test CategoriesReturnCompleteGet200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
